VERSION --use-function-keyword 0.7
IMPORT ../../infrastructure/earthly/go AS go-build

LOCALLY
ARG --global service=$(basename $PWD)
ARG --global src_files=$(find pkg -type f ! -name "*_test.go")
ARG --global cgo_enabled=0

deps:
    FROM ../../+deps
    DO go-build+DEPS --service=$service --src_files=$src_files
    WORKDIR services/$service

artifacts:
    FROM +deps
    SAVE ARTIFACT /etc/ssl/certs/ca-certificates.crt
    SAVE ARTIFACT /usr/share/zoneinfo

compile:
    FROM +deps
    DO go-build+COMPILE --cgo_enabled=$cgo_enabled

unit-test:
    FROM +compile
    DO go-build+UNIT_TEST

lint:
    FROM +deps
    DO go-build+LINT
    
docker:
    FROM alpine:3.18
    ARG UID=1000
    ARG registry="europe-west3-docker.pkg.dev/fdc-public-docker-registry/kuberpult"
    ARG tag="local"
    DO go-build+DOCKER --UID=$UID --image_tag=$registry/kuberpult-$service:$tag --entry_point=/main --cgo_enabled=$cgo_enabled --service=$service

release:
    FROM +docker
    ARG registry="europe-west3-docker.pkg.dev/fdc-public-docker-registry/kuberpult"
    ARG --required tag
    DO go-build+RELEASE --image_tag=$registry/kuberpult-$service:$tag

build-pr:
    ARG --required tag
    ARG registry="ghcr.io/freiheit-com/kuberpult"
    ARG mirror="false"
    ARG mirror_registry="europe-west3-docker.pkg.dev/fdc-public-docker-registry/kuberpult"

    DO +BUILD_ALL --tag=$tag --registry=$registry --mirror=$mirror  --mirror_registry=$mirror_registry

build-main:
    ARG --required tag
    ARG registry="ghcr.io/freiheit-com/kuberpult"
    ARG mirror="false"
    ARG mirror_registry="europe-west3-docker.pkg.dev/fdc-public-docker-registry/kuberpult"

    DO +BUILD_ALL --tag=$tag --registry=$registry --mirror=$mirror  --mirror_registry=$mirror_registry

BUILD_ALL:
    FUNCTION
    ARG --required tag
    ARG --required registry
    ARG mirror_registry="europe-west3-docker.pkg.dev/fdc-public-docker-registry/kuberpult"
    ARG mirror="false"

    FROM +deps
    BUILD +lint
    BUILD +unit-test 
    BUILD +release --registry=$registry --tag=$tag
    IF [ "$mirror" = "true" ]
        BUILD +release --registry=$mirror_registry --tag=$tag
    END