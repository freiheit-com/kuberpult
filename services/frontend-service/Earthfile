VERSION 0.7
ARG --global service=frontend-service

deps:
    FROM ../../+deps
    COPY ../../pkg+artifacts/* pkg/
    COPY (../cd-service/+artifacts/pkg --service=cd-service) services/cd-service/pkg/
    COPY pkg services/$service/pkg
    COPY cmd/server/* services/$service/cmd/server/
    RUN ln -s pkg/api services/$service/api
    SAVE ARTIFACT /etc/ssl/certs/ca-certificates.crt
    SAVE ARTIFACT /usr/share/zoneinfo
    SAVE IMAGE --cache-hint
artifacts:
    FROM +deps
    WORKDIR services/$service
    COPY package.json pnpm-lock.yaml pnpm-workspace.yaml tsconfig.json .
    SAVE ARTIFACT package.json
    SAVE ARTIFACT tsconfig.json
    SAVE ARTIFACT pnpm-lock.yaml
    SAVE ARTIFACT pnpm-workspace.yaml
    SAVE ARTIFACT src
compile:
    FROM +deps
    ARG USERARCH
    WORKDIR services/$service/cmd/server
    RUN CGO_ENABLED=0 \
        GOARCH=$USERARCH \
	    GOOS=linux \
        go build -o bin/main main.go
    SAVE ARTIFACT bin/main
    SAVE IMAGE --cache-hint

unit-test:
    FROM +deps
    WORKDIR services/$service
    RUN CGO_ENABLED=0 go test ./...
    RUN go test ../../pkg/...

docker:
    FROM alpine:3.18
    ARG tag="local"
    ARG registry="europe-west3-docker.pkg.dev/fdc-public-docker-registry/kuberpult"
    ENV TZ=Europe/Berlin
    COPY +compile/main /main
    COPY +deps/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt
    COPY +deps/zoneinfo /usr/share/zoneinfo
    COPY +deps-ui/build /build
    ENTRYPOINT ["/main"] 
    SAVE IMAGE $registry/kuberpult-$service:$tag

deps-ui:
    FROM node:20.9.0-alpine3.18
    WORKDIR /kp
    RUN npm install -g pnpm@8.9.2
    COPY package.json pnpm-lock.yaml pnpm-workspace.yaml buf.yaml buf.gen.yaml buf.lock tsconfig.json .eslintrc .prettierrc .npmrc .nvmrc .
    RUN pnpm i

    COPY ../../+deps/buf /usr/bin/buf
    COPY ../../pkg+artifacts/pkg/api api
    COPY src src
    COPY public public
    RUN buf generate --path api --timeout 5m
    RUN pnpm build
    
    SAVE ARTIFACT build

unit-test-ui:
    FROM +deps-ui
    RUN pnpm eslint
    RUN pnpm lint-scss
    RUN pnpm test -- --watchAll=false

docker-ui:
    FROM +deps-ui
    CMD "rm -rf src/api && buf generate --path api --timeout 5m && pnpm start" 
    SAVE IMAGE ui:local

release:
    FROM +docker
    ARG tag="local"
    ARG registry="ghcr.io/freiheit-com/kuberpult"
    SAVE IMAGE --push $registry/kuberpult-$service:$tag

release-ui:
    FROM +docker-ui
    ARG registry="ghcr.io/freiheit-com/kuberpult"
    SAVE IMAGE --push $registry/kuberpult-ui:local