# This file is part of kuberpult.

# Kuberpult is free software: you can redistribute it and/or modify
# it under the terms of the Expat(MIT) License as published by
# the Free Software Foundation.

# Kuberpult is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# MIT License for more details.

# You should have received a copy of the MIT License
# along with kuberpult. If not, see <https://directory.fsf.org/wiki/License:Expat>.

# Copyright freiheit.com

{{- if .Values.ingress.exposeReleaseEndpoint }}
{{ fail "Values.ingress.exposeReleaseEndpoint cannot be used anymore. Use the frontend service to call the /release endpoint"}}
{{ end -}}

{{- if .Values.ingress.create }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/acme-challenge-type: dns01
    cert-manager.io/cluster-issuer: letsencrypt
{{- range $key, $value := .Values.ingress.annotations }}
    {{ $key | quote}}: {{ $value | quote}}
{{- end }}
  name: kuberpult
spec:
{{- if and (.Values.ingress.private) (eq .Values.kubernetesEngine "GKE") }}
  ingressClassName: "gce-private"
{{- else if .Values.ingress.ingressClassName }}
  ingressClassName: {{ .Values.ingress.ingressClassName | quote }}
{{- end }}
  rules:
  - host: {{ required ".ingress.domainName is required" .Values.ingress.domainName | quote }}
    http:
      paths:
{{- if .Values.ingress.allowedPaths.oldRestApi }}
# Old Rest API:
      - pathType: Prefix
        path: /release
        backend:
          service:
            name: kuberpult-frontend-service
            port:
              name: http
      - pathType: Prefix
        path: /environments
        backend:
          service:
            name: kuberpult-frontend-service
            port:
              name: http
      - pathType: Prefix
        path: /environment-groups
        backend:
          service:
            name: kuberpult-frontend-service
            port:
              name: http
{{- end }}
{{- if .Values.ingress.allowedPaths.restApi }}
# New API:
      - pathType: Prefix
        path: /api/
        backend:
          service:
            name: kuberpult-frontend-service
            port:
              name: http
{{- end }}
{{- if .Values.ingress.allowedPaths.dex }}
# Dex (UI Authorization flow):
      - pathType: Prefix
        path: /dex
        backend:
          service:
            name: kuberpult-frontend-service
            port:
              name: http
      - pathType: Prefix
        path: /callback
        backend:
          service:
            name: kuberpult-frontend-service
            port:
              name: http
      - pathType: Prefix
        path: /token
        backend:
          service:
            name: kuberpult-frontend-service
            port:
              name: http
      - pathType: Prefix
        path: /login
        backend:
          service:
            name: kuberpult-frontend-service
            port:
              name: http
{{- end }}
{{- if .Values.ingress.allowedPaths.ui }}
# UI bootstrapping:
      - pathType: ImplementationSpecific
        path: /ui/*
        backend:
          service:
            name: kuberpult-frontend-service
            port:
              name: http
      - pathType: Exact
        path: /
        backend:
          service:
            name: kuberpult-frontend-service
            port:
              name: http
      - pathType: Prefix
        path: /static/js/
        backend:
          service:
            name: kuberpult-frontend-service
            port:
              name: http
      - pathType: Prefix
        path: /static/css/
        backend:
          service:
            name: kuberpult-frontend-service
            port:
              name: http
      - pathType: Prefix
        path: /favicon.png
        backend:
          service:
            name: kuberpult-frontend-service
            port:
              name: http
# GRPC over HTTP for UI:
      - pathType: Prefix
        path: /api.v1.OverviewService/
        backend:
          service:
            name: kuberpult-frontend-service
            port:
              name: http
      - pathType: Prefix
        path: /api.v1.BatchService/
        backend:
          service:
            name: kuberpult-frontend-service
            port:
              name: http
      - pathType: Prefix
        path: /api.v1.FrontendConfigService/
        backend:
          service:
            name: kuberpult-frontend-service
            port:
              name: http
      - pathType: Prefix
        path: /api.v1.RolloutService/
        backend:
          service:
            name: kuberpult-frontend-service
            port:
              name: http
      - pathType: Prefix
        path: /api.v1.GitService/
        backend:
          service:
            name: kuberpult-frontend-service
            port:
              name: http
      - pathType: Prefix
        path: /api.v1.EnvironmentService/
        backend:
          service:
            name: kuberpult-frontend-service
            port:
              name: http
      - pathType: Prefix
        path: /api.v1.ReleaseTrainPrognosisService/
        backend:
          service:
            name: kuberpult-frontend-service
            port:
              name: http
      - pathType: Prefix
        path: /api.v1.EslService/
        backend:
          service:
            name: kuberpult-frontend-service
            port:
              name: http
{{- end }}
  tls:
  - hosts:
    - {{ default .Values.ingress.domainName .Values.ingress.tls.host | quote}}
    secretName: {{.Values.ingress.tls.secretName | quote}}
---
{{- if .Values.ingress.iap.enabled }}
apiVersion: cloud.google.com/v1beta1
kind: BackendConfig
metadata:
  name: kuberpult
spec:
  healthCheck:
    requestPath: /healthz
    type: HTTP
  iap:
    enabled: true
    oauthclientCredentials:
      secretName: {{ required ".ingress.iap.secretName is required" .Values.ingress.iap.secretName }}
{{- end }}
{{- end }}
