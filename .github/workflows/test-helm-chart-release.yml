name: Lint and Test Charts
on:
  workflow_call:
    inputs:
      trigger:
        required: true
        type: string
        description: 'The trigger which calls the workflow, one of [pull-request, main, tag]'
jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e # ratchet:actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Helm
        uses: azure/setup-helm@18bc76811624f360dbd7f18c2d4ecb32c7b87bab # ratchet:azure/setup-helm@v1
        with:
          version: v3.7.2
      - uses: actions/setup-python@7f80679172b057fc5e90d70d197929d454754a5a # ratchet:actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Set up chart-testing
        uses: helm/chart-testing-action@6b64532d456fa490a3da177fbd181ac4c8192b58 # ratchet:helm/chart-testing-action@v2.2.0
      - name: Set version pr
        if: inputs.trigger == 'pull-request' || inputs.trigger == 'main'
        run: |
          echo "VERSION=$(make version)" >> $GITHUB_ENV
      - name: Set version tag
        if: inputs.trigger == 'tag'
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/}"  >> $GITHUB_ENV
      - name: Create chart and test values
        run: |
          make -C charts/kuberpult ci/test-values.yaml
      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch main)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi
      - name: Run chart-testing (lint)
        run: ct lint --target-branch main --all
      - name: Helm linting
        run: |
          make -C charts/kuberpult test-ci
      - name: Create kind cluster
        uses: helm/kind-action@94729529f85113b88f4f819c17ce61382e6d8478 # ratchet:helm/kind-action@v1.2.0
        if: steps.list-changed.outputs.changed == 'true'
      - name: Run chart-testing (install)
        run: ct install --debug --target-branch main --helm-extra-args " --timeout 1m "
