name: "Execution Plan"
'on':
  pull_request:
    branches:
      - main
jobs:
  execution_plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: google-github-actions/auth@v0 
        name: 'Authenticate to Google Cloud'
        with:
          credentials_json: ${{ secrets.FDC_CORE_CI_IMAGE_READER }} 
      - name: gcloud authorize
        run: |
          gcloud auth configure-docker
      - run: mkdir -p artifacts/
      - name: Plan execution
        run: |
          ./infrastructure/scripts/execution-plan/plan.sh ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} > artifacts/execution-plan.json 
      - name: Execute 
        run: |
          # stub code, as of now just prints the plan
          echo "The execution plan is printed"
          cat artifacts/execution-plan.json
      - uses: actions/upload-artifact@v3
        with:
          name: execution-plan.json
          path: artifacts/execution-plan.json
  github_convertor:
    needs: execution_plan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@master
        with:
          name: execution-plan.json 
          path: artifacts
      - uses: google-github-actions/auth@v0 
        name: 'Authenticate to Google Cloud'
        with:
          credentials_json: ${{ secrets.FDC_CORE_CI_IMAGE_READER }} 
      - name: gcloud authorize
        run: |
          gcloud auth configure-docker
      - name: Planner
        id: plan
        run: |
          init="$(cat artifacts/execution-plan.json | docker run -i eu.gcr.io/freiheit-core/services/github-convertor/github-convertor:0.0.1 init | tr -d '\n')"
          build="$(cat artifacts/execution-plan.json | docker run -i eu.gcr.io/freiheit-core/services/github-convertor/github-convertor:0.0.1 build | tr -d '\n')"
          publish="$(cat artifacts/execution-plan.json | docker run -i eu.gcr.io/freiheit-core/services/github-convertor/github-convertor:0.0.1 publish | tr -d '\n')"
    outputs:
      init: ${{ steps.plan.outputs.init }}
      build: ${{ steps.plan.outputs.build }}
      publish: ${{ steps.plan.outputs.publish }}

  init:
    needs: github_convertor
    strategy:
      matrix: 
        data: ${{fromJSON(needs.github_convertor.outputs.init)}}
    runs-on: ubuntu-latest
    container: 
      image: ${{ matrix.data.image }}
    steps:
      - name: initialize
        run: ${{ matrix.data.command }}

          # build:
          #   needs: [init, github_convertor]
          #   runs-on: ubuntu-latest
          #   strategy:
          #     matrix: ${{ fromJSON(needs.github_convertor.outputs.build) }}
          #   container: 
          #     image: ${{ matrix.image }}
          #   steps:
          #     - name: build
          #       run: ${{ matrix.command }}
          # publish:
          #   needs: [build, github_convertor]
          #   runs-on: ubuntu-latest
          #   strategy:
          #     matrix: ${{ fromJSON(needs.github_convertor.outputs.publish) }}
          #   container: 
          #     image: ${{ matrix.image }}
          #   steps:
          #     - name: publish
          #       run: ${{ matrix.command }}
